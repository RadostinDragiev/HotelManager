name: Develop

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  test:
    name: Run Maven Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'
      
      - name: Run Maven Tests
        run: mvn test
  Analysis:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Analyze with SonarCloud

        uses: SonarSource/sonarcloud-github-action@4006f663ecaf1f8093e8e4abb9227f6041f52216
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args:
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
          projectBaseDir: .
  sonar:
    needs: Analysis
    name: SonarCloud Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'maven'

      - name: Build and test with coverage
        run: mvn clean verify -Pcoverage

      - name: Run SonarCloud Scan
        run: |
          mvn org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }} \
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
            -Dsonar.coverage.jacoco.xmlReportPaths=**/target/site/jacoco-aggregate/jacoco.xml

      - name: Check SonarCloud Quality Gate
        run: |
          SONAR_STATUS=$(curl -s -u "${{ secrets.SONAR_TOKEN }}:" \
            "https://sonarcloud.io/api/qualitygates/project_status?projectKey=${{ secrets.SONAR_PROJECT_KEY }}" | jq -r .projectStatus.status)
          echo "SonarCloud Quality Gate Status: $SONAR_STATUS"
          if [[ "$SONAR_STATUS" != "OK" ]]; then
            echo "‚ùå Quality gate failed (coverage < 80%)"
            exit 1
          fi
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
